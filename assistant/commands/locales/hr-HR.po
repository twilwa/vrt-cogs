msgid ""
msgstr ""
"Project-Id-Version: vrt-cogs\n"
"POT-Creation-Date: 2023-11-07 16:20-0500\n"
"PO-Revision-Date: 2023-11-07 22:51\n"
"Last-Translator: \n"
"Language-Team: Croatian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: redgettext 3.4.2\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Crowdin-Project: vrt-cogs\n"
"X-Crowdin-Project-ID: 550681\n"
"X-Crowdin-Language: hr\n"
"X-Crowdin-File: /main/assistant/commands/locales/messages.pot\n"
"X-Crowdin-File-ID: 53\n"
"Language: hr_HR\n"

#: commands\admin.py:46
#, docstring
msgid "\n"
"        Setup the assistant\n\n"
"        You will need an **[api key](https://platform.openai.com/account/api-keys)** from OpenAI to use ChatGPT and their other models.\n\n"
"        This cog supports setting an endpoint override for [self-hosted](https://github.com/vertyco/gpt-api) models.\n"
"        "
msgstr ""

#: commands\admin.py:58
#, docstring
msgid "\n"
"        View current settings\n\n"
"        To send in current channel, use `[p]assistant view false`\n"
"        "
msgstr ""

#: commands\admin.py:66 commands\admin.py:175
msgid "Not Set"
msgstr ""

#: commands\admin.py:92
msgid "{} (Global Override)"
msgstr ""

#: commands\admin.py:98
msgid "`OpenAI Version:      `{}\n"
msgstr ""

#: commands\admin.py:99
msgid "`Model:               `{}\n"
msgstr ""

#: commands\admin.py:100
msgid "`Enabled:             `{}\n"
msgstr ""

#: commands\admin.py:101
msgid "`Timezone:            `{}\n"
msgstr ""

#: commands\admin.py:102
msgid "`Channel:             `{}\n"
msgstr ""

#: commands\admin.py:103
msgid "`? Required:          `{}\n"
msgstr ""

#: commands\admin.py:104
msgid "`Mentions:            `{}\n"
msgstr ""

#: commands\admin.py:105
msgid "`Max Retention:       `{}\n"
msgstr ""

#: commands\admin.py:106
msgid "`Retention Expire:    `{}s\n"
msgstr ""

#: commands\admin.py:107
msgid "`Max Tokens:          `{}\n"
msgstr ""

#: commands\admin.py:108
msgid "`Max Response Tokens: `{}\n"
msgstr ""

#: commands\admin.py:109
msgid "`Min Length:          `{}\n"
msgstr ""

#: commands\admin.py:110
msgid "`Temperature:         `{}\n"
msgstr ""

#: commands\admin.py:111
msgid "`Frequency Penalty:   `{}\n"
msgstr ""

#: commands\admin.py:112
msgid "`Presence Penalty:    `{}\n"
msgstr ""

#: commands\admin.py:113
msgid "`Seed:                `{}\n"
msgstr ""

#: commands\admin.py:114
msgid "`System Message:      `{} tokens\n"
msgstr ""

#: commands\admin.py:115
msgid "`Initial Prompt:      `{} tokens\n"
msgstr ""

#: commands\admin.py:119
msgid "Assistant Settings"
msgstr ""

#: commands\admin.py:127
msgid "Mixed (Please Refresh!)"
msgstr ""

#: commands\admin.py:129
msgid "Synced!"
msgstr ""

#: commands\admin.py:131
msgid "N/A"
msgstr ""

#: commands\admin.py:134
msgid "`Top N Embeddings:  `{}\n"
msgstr ""

#: commands\admin.py:135
msgid "`Min Relatedness:   `{}\n"
msgstr ""

#: commands\admin.py:136
msgid "`Embedding Method:  `{}\n"
msgstr ""

#: commands\admin.py:137
msgid "`Encodings:         `{}"
msgstr ""

#: commands\admin.py:141
msgid "Embeddings ({})"
msgstr ""

#: commands\admin.py:147
msgid "The following roles/users are considered tutors, if function calls are on the model can create its own embeddings: "
msgstr ""

#: commands\admin.py:156
msgid "`Function Calling:  `{}\n"
msgstr ""

#: commands\admin.py:157
msgid "`Maximum Recursion: `{}\n"
msgstr ""

#: commands\admin.py:158
msgid "`Function Tokens:   `{}\n"
msgstr ""

#: commands\admin.py:162
msgid "The following cogs also have functions registered with the assistant\n"
"{}"
msgstr ""

#: commands\admin.py:167
msgid "Custom Functions ({})"
msgstr ""

#: commands\admin.py:174
msgid "OpenAI Key"
msgstr ""

#: commands\admin.py:182
msgid "Regex Blacklist"
msgstr ""

#: commands\admin.py:184
msgid "Regex Failure Blocking"
msgstr ""

#: commands\admin.py:185
msgid "Block reply if regex replacement fails: **{}**"
msgstr ""

#: commands\admin.py:190
msgid "Conversations are stored persistently"
msgstr ""

#: commands\admin.py:192
msgid "conversations are stored in memory until reboot or reload"
msgstr ""

#: commands\admin.py:194
msgid "Persistent Conversations"
msgstr ""

#: commands\admin.py:208
msgid "Blacklist"
msgstr ""

#: commands\admin.py:220
msgid "Model Role Overrides"
msgstr ""

#: commands\admin.py:231
msgid "Max Token Role Overrides"
msgstr ""

#: commands\admin.py:242
msgid "Max Message Retention Role Overrides"
msgstr ""

#: commands\admin.py:254
msgid "Max Message Retention Time Role Overrides"
msgstr ""

#: commands\admin.py:268
msgid "Max Response Token Role Overrides"
msgstr ""

#: commands\admin.py:270
msgid "Showing settings for {}"
msgstr ""

#: commands\admin.py:276
msgid "SystemPrompt"
msgstr ""

#: commands\admin.py:282
msgid "InitialPrompt"
msgstr ""

#: commands\admin.py:292
msgid "Sent your current settings for this server in DMs!"
msgstr ""

#: commands\admin.py:294
msgid "You need to allow DMs so I can message you!"
msgstr ""

#: commands\admin.py:301
#, docstring
msgid "View the token usage stats for this server"
msgstr ""

#: commands\admin.py:304
msgid "There is no usage data yet!"
msgstr ""

#: commands\admin.py:330
msgid "`Total:  `{} (${} @ ${}/1k tokens)"
msgstr ""

#: commands\admin.py:337
msgid "Free/Self-Hosted"
msgstr ""

#: commands\admin.py:341
msgid "`Input:  `{} (${} @ ${}/1k tokens)\n"
"`Output: `{} (${} @ ${}/1k tokens)\n"
"`Total:  `{} (${})"
msgstr ""

#: commands\admin.py:355
msgid "**Overall Token Usage and Cost**\n"
"`Input:  `{} (${})\n"
"`Output: `{} (${})\n"
"`Total:  `{} (${})"
msgstr ""

#: commands\admin.py:371
#, docstring
msgid "Reset the token usage stats for this server"
msgstr ""

#: commands\admin.py:374
msgid "Token usage stats have been reset!"
msgstr ""

#: commands\admin.py:380
#, docstring
msgid "\n"
"        Set your OpenAI key\n\n"
"        Setting this will disable any endpoint overrides you have for this server.\n"
"        "
msgstr ""

#: commands\admin.py:388
msgid "Click to set your OpenAI key\n\n"
"To remove your keys, enter `none`"
msgstr ""

#: commands\admin.py:396
msgid "OpenAI key has been removed!"
msgstr ""

#: commands\admin.py:399
msgid "No API key was entered!"
msgstr ""

#: commands\admin.py:402
msgid "OpenAI key has been set!"
msgstr ""

#: commands\admin.py:408
#, docstring
msgid "Set the timezone used for prompt placeholders"
msgstr ""

#: commands\admin.py:414
msgid "Invalid Timezone, did you mean `{}`?"
msgstr ""

#: commands\admin.py:416
msgid "Timezone set to **{}** (`{}`)"
msgstr ""

#: commands\admin.py:423
#, docstring
msgid "\n"
"        Set the initial prompt for GPT to use\n\n"
"        **Placeholders**\n"
"        - **botname**: [botname]\n"
"        - **timestamp**: discord timestamp\n"
"        - **day**: Mon-Sun\n"
"        - **date**: MM-DD-YYYY\n"
"        - **time**: HH:MM AM/PM\n"
"        - **timetz**: HH:MM AM/PM Timezone\n"
"        - **members**: server member count\n"
"        - **username**: user's name\n"
"        - **displayname**: user's display name\n"
"        - **roles**: the names of the user's roles\n"
"        - **rolementions**: the mentions of the user's roles\n"
"        - **avatar**: the user's avatar url\n"
"        - **owner**: the owner of the server\n"
"        - **servercreated**: the create date/time of the server\n"
"        - **server**: the name of the server\n"
"        - **py**: python version\n"
"        - **dpy**: discord.py version\n"
"        - **red**: red version\n"
"        - **cogs**: list of currently loaded cogs\n"
"        - **channelname**: name of the channel the conversation is taking place in\n"
"        - **channelmention**: current channel mention\n"
"        - **topic**: topic of current channel (if not forum or thread)\n"
"        - **banktype**: whether the bank is global or not\n"
"        - **currency**: currency name\n"
"        - **bank**: bank name\n"
"        - **balance**: the user's current balance\n"
"        "
msgstr ""

#: commands\admin.py:459 commands\admin.py:537
msgid "Failed to read `{}`, bot owner can use `{}` for more information"
msgstr ""

#: commands\admin.py:475 commands\admin.py:554
msgid "Your system and initial prompt combined will use {} tokens!\n"
"Write a prompt combination using {} tokens or less to leave 10% of your configured max tokens for your response."
msgstr ""

#: commands\admin.py:483
msgid "The initial prompt has been removed!"
msgstr ""

#: commands\admin.py:486
msgid "Please include an initial prompt or .txt file!\n"
"Use `{}` to view details for this command"
msgstr ""

#: commands\admin.py:492
msgid "The initial prompt has been overwritten!"
msgstr ""

#: commands\admin.py:495
msgid "Initial prompt has been set!"
msgstr ""

#: commands\admin.py:501
#, docstring
msgid "\n"
"        Set the system prompt for GPT to use\n\n"
"        **Placeholders**\n"
"        - **botname**: [botname]\n"
"        - **timestamp**: discord timestamp\n"
"        - **day**: Mon-Sun\n"
"        - **date**: MM-DD-YYYY\n"
"        - **time**: HH:MM AM/PM\n"
"        - **timetz**: HH:MM AM/PM Timezone\n"
"        - **members**: server member count\n"
"        - **username**: user's name\n"
"        - **displayname**: user's display name\n"
"        - **roles**: the names of the user's roles\n"
"        - **rolementions**: the mentions of the user's roles\n"
"        - **avatar**: the user's avatar url\n"
"        - **owner**: the owner of the server\n"
"        - **servercreated**: the create date/time of the server\n"
"        - **server**: the name of the server\n"
"        - **py**: python version\n"
"        - **dpy**: discord.py version\n"
"        - **red**: red version\n"
"        - **cogs**: list of currently loaded cogs\n"
"        - **channelname**: name of the channel the conversation is taking place in\n"
"        - **channelmention**: current channel mention\n"
"        - **topic**: topic of current channel (if not forum or thread)\n"
"        - **banktype**: whether the bank is global or not\n"
"        - **currency**: currency name\n"
"        - **bank**: bank name\n"
"        - **balance**: the user's current balance\n"
"        "
msgstr ""

#: commands\admin.py:562
msgid "The system prompt has been removed!"
msgstr ""

#: commands\admin.py:565
msgid "Please include a system prompt or .txt file!\n"
"Use `{}` to view details for this command"
msgstr ""

#: commands\admin.py:571
msgid "The system prompt has been overwritten!"
msgstr ""

#: commands\admin.py:574
msgid "System prompt has been set!"
msgstr ""

#: commands\admin.py:588
#, docstring
msgid "Set the channel for the assistant"
msgstr ""

#: commands\admin.py:593
msgid "Assistant channel has been removed"
msgstr ""

#: commands\admin.py:596
msgid "Assistant channel has been overwritten"
msgstr ""

#: commands\admin.py:599
msgid "Channel id has been set"
msgstr ""

#: commands\admin.py:605
#, docstring
msgid "Toggle whether questions need to end with **__?__**"
msgstr ""

#: commands\admin.py:609
msgid "Questions will be answered regardless of if they end with **?**"
msgstr ""

#: commands\admin.py:612
msgid "Questions must end in **?** to be answered"
msgstr ""

#: commands\admin.py:617
#, docstring
msgid "Toggle the assistant on or off"
msgstr ""

#: commands\admin.py:621
msgid "The assistant is now **Disabled**"
msgstr ""

#: commands\admin.py:624
msgid "The assistant is now **Enabled**"
msgstr ""

#: commands\admin.py:629
#, docstring
msgid "Toggle whether to ping the user on replies"
msgstr ""

#: commands\admin.py:633
msgid "Mentions are now **Disabled**"
msgstr ""

#: commands\admin.py:636
msgid "Mentions are now **Enabled**"
msgstr ""

#: commands\admin.py:641
#, docstring
msgid "\n"
"        Set the max messages for a conversation\n\n"
"        Conversation retention is cached and gets reset when the bot restarts or the cog reloads.\n\n"
"        Regardless of this number, the initial prompt and internal system message are always included,\n"
"        this only applies to any conversation between the user and bot after that.\n\n"
"        Set to 0 to disable conversation retention\n\n"
"        **Note:** *actual message count may exceed the max retention during an API call*\n"
"        "
msgstr ""

#: commands\admin.py:654 commands\admin.py:1561
msgid "Max retention needs to be at least 0 or higher"
msgstr ""

#: commands\admin.py:658
msgid "Conversation retention has been disabled"
msgstr ""

#: commands\admin.py:660
msgid "Conversations can now retain up to **{}** messages"
msgstr ""

#: commands\admin.py:665
#, docstring
msgid "\n"
"        Set the conversation expiration time\n\n"
"        Regardless of this number, the initial prompt and internal system message are always included,\n"
"        this only applies to any conversation between the user and bot after that.\n\n"
"        Set to 0 to store conversations indefinitely or until the bot restarts or cog is reloaded\n"
"        "
msgstr ""

#: commands\admin.py:674 commands\admin.py:1584
msgid "Max retention time needs to be at least 0 or higher"
msgstr ""

#: commands\admin.py:678
msgid "Conversations will be stored until the bot restarts or the cog is reloaded"
msgstr ""

#: commands\admin.py:680
msgid "Conversations will be considered active for **{}** seconds"
msgstr ""

#: commands\admin.py:685
#, docstring
msgid "\n"
"        Set the temperature for the model (0.0 - 2.0)\n"
"        - Defaults is 1\n\n"
"        Closer to 0 is more concise and accurate while closer to 2 is more imaginative\n"
"        "
msgstr ""

#: commands\admin.py:692
msgid "Temperature must be between **0.0** and **2.0**"
msgstr ""

#: commands\admin.py:697
msgid "Temperature has been set to **{}**"
msgstr ""

#: commands\admin.py:701
#, docstring
msgid "\n"
"        Set the frequency penalty for the model (-2.0 to 2.0)\n"
"        - Defaults is 0\n\n"
"        Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n"
"        "
msgstr ""

#: commands\admin.py:708
msgid "Frequency penalty must be between **-2.0** and **2.0**"
msgstr ""

#: commands\admin.py:713
msgid "Frequency penalty has been set to **{}**"
msgstr ""

#: commands\admin.py:717
#, docstring
msgid "\n"
"        Set the presence penalty for the model (-2.0 to 2.0)\n"
"        - Defaults is 0\n\n"
"        Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n"
"        "
msgstr ""

#: commands\admin.py:724
msgid "Presence penalty must be between **-2.0** and **2.0**"
msgstr ""

#: commands\admin.py:729
msgid "Presence penalty has been set to **{}**"
msgstr ""

#: commands\admin.py:733
#, docstring
msgid "\n"
"        Make the model more deterministic by setting a seed for the model.\n"
"        - Default is None\n\n"
"        If specified, the system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result.\n"
"        "
msgstr ""

#: commands\admin.py:740
msgid "Seed must be a positive integer"
msgstr ""

#: commands\admin.py:744
msgid "The seed has been set to **{}**"
msgstr ""

#: commands\admin.py:748
#, docstring
msgid "\n"
"        Refresh embedding weights\n\n"
"        *This command can be used when changing the embedding method you use with your self-hosted llm*\n\n"
"        Embeddings that were created using OpenAI cannot be use with the self-hosted model and vice versa\n"
"        "
msgstr ""

#: commands\admin.py:761
msgid "{} embeddings have been updated"
msgstr ""

#: commands\admin.py:763
msgid "No embeddings needed to be refreshed"
msgstr ""

#: commands\admin.py:767
#, docstring
msgid "Toggle whether GPT can call functions\n\n"
"        Only the following models can call functions at the moment (With OpenAI key only)\n"
"        - gpt-3.5-turbo\n"
"        - gpt-3.5-turbo-16k\n"
"        - gpt-4\n"
"        - gpt-4-32k\n"
"        "
msgstr ""

#: commands\admin.py:778
msgid "Assistant will not call functions"
msgstr ""

#: commands\admin.py:781
msgid "Assistant will now call functions as needed"
msgstr ""

#: commands\admin.py:786
#, docstring
msgid "Set the maximum function calls allowed in a row\n\n"
"        This sets how many times the model can call functions in a row\n\n"
"        Only the following models can call functions at the moment\n"
"        - gpt-3.5-turbo\n"
"        - gpt-3.5-turbo-16k\n"
"        - gpt-4\n"
"        - gpt-4-32k\n"
"        "
msgstr ""

#: commands\admin.py:799
msgid "Function calls will not be used since recursion is 0"
msgstr ""

#: commands\admin.py:801
msgid "The model can now call various functions up to {} times before returning a response"
msgstr ""

#: commands\admin.py:807
#, docstring
msgid "\n"
"        set min character length for questions\n\n"
"        Set to 0 to respond to anything\n"
"        "
msgstr ""

#: commands\admin.py:813
msgid "Minimum length needs to be at least 0 or higher"
msgstr ""

#: commands\admin.py:817
msgid "{} will respond regardless of message length"
msgstr ""

#: commands\admin.py:820
msgid "{} will respond to messages with more than **{}** characters"
msgstr ""

#: commands\admin.py:828
#, docstring
msgid "\n"
"        Set the max tokens that the bot will send to the model\n\n"
"        **Tips**\n"
"        - Max tokens are a soft cap, sometimes messages can be a little over\n"
"        - If you set max tokens too high the cog will auto-adjust to 100 less than the models natural cap\n"
"        - Ideally set max to 500 less than that models maximum, to allow adequate responses\n\n"
"        Using more than the model can handle will raise exceptions.\n"
"        "
msgstr ""

#: commands\admin.py:839 commands\admin.py:1512
msgid "Use at least 100 tokens"
msgstr ""

#: commands\admin.py:842
msgid "The maximum amount of tokens sent in a payload will be {}.\n"
"*Note that models with token limits lower than this will still be trimmed*"
msgstr ""

#: commands\admin.py:851
#, docstring
msgid "\n"
"        Set the max response tokens the model can respond with\n\n"
"        Set to 0 for response tokens to be dynamic\n"
"        "
msgstr ""

#: commands\admin.py:857 commands\admin.py:1538
msgid "Cannot be a negative number!"
msgstr ""

#: commands\admin.py:861
msgid "The maximum amount of tokens in the models responses will be {}."
msgstr ""

#: commands\admin.py:863
msgid "Response tokens will now be dynamic"
msgstr ""

#: commands\admin.py:869
#, docstring
msgid "\n"
"        Set the OpenAI model to use\n"
"        "
msgstr ""

#: commands\admin.py:877 commands\admin.py:1478
msgid "**Chat**\n"
"{}\n"
"**Completion**\n"
"{}\n"
msgstr ""

#: commands\admin.py:880 commands\admin.py:1481
msgid "Valid models are:\n"
"{}"
msgstr ""

#: commands\admin.py:887 commands\admin.py:1488
msgid "Error: {}"
msgstr ""

#: commands\admin.py:891
msgid "The **{}** model will now be used"
msgstr ""

#: commands\admin.py:896
#, docstring
msgid "\n"
"        Set a custom endpoint to use a [self-hosted model](https://github.com/vertyco/gpt-api)\n\n"
"        Example: `http://localhost:8000/v1`\n\n"
"        Endpoint overrides will not be used if there is an API key set.\n"
"        "
msgstr ""

#: commands\admin.py:904 commands\admin.py:929
msgid "Invalid URL, must start with `http`"
msgstr ""

#: commands\admin.py:908 commands\admin.py:932
msgid "Endpoint has been reset!"
msgstr ""

#: commands\admin.py:911 commands\admin.py:935
msgid "Endpoint has been overwritten!"
msgstr ""

#: commands\admin.py:914 commands\admin.py:938
msgid "Endpoint has been set!"
msgstr ""

#: commands\admin.py:921
#, docstring
msgid "\n"
"        Set a custom global endpoint to use a [self-hosted model](https://github.com/vertyco/gpt-api) for all guilds as a fallback\n\n"
"        Example: `http://localhost:8000/v1`\n\n"
"        Endpoint overrides will not be used if there is an API key set.\n"
"        "
msgstr ""

#: commands\admin.py:945
#, docstring
msgid "\n"
"        Wipe saved embeddings for the assistant\n\n"
"        This will delete any and all saved embedding training data for the assistant.\n"
"        "
msgstr ""

#: commands\admin.py:951 commands\admin.py:1716
msgid "Not wiping embedding data"
msgstr ""

#: commands\admin.py:954
msgid "All embedding data has been wiped!"
msgstr ""

#: commands\admin.py:959
#, docstring
msgid "\n"
"        Wipe saved conversations for the assistant in this server\n\n"
"        This will delete any and all saved conversations for the assistant.\n"
"        "
msgstr ""

#: commands\admin.py:965 commands\admin.py:1689
msgid "Not wiping conversations"
msgstr ""

#: commands\admin.py:969
msgid "Conversations have been wiped in this server!"
msgstr ""

#: commands\admin.py:974
#, docstring
msgid "\n"
"        Set the embedding inclusion amout\n\n"
"        Top N is the amount of embeddings to include with the initial prompt\n"
"        "
msgstr ""

#: commands\admin.py:980
msgid "Top N must be between 0 and 10"
msgstr ""

#: commands\admin.py:984
msgid "Embeddings will not be pulled during conversations"
msgstr ""

#: commands\admin.py:986
msgid "Up to **{}** embeddings will be pulled for each interaction"
msgstr ""

#: commands\admin.py:991
#, docstring
msgid "\n"
"        Set the minimum relatedness an embedding must be to include with the prompt\n\n"
"        Relatedness threshold between 0 and 1 to include in embeddings during chat\n\n"
"        Questions are converted to embeddings and compared against stored embeddings to pull the most relevant, this is the score that is derived from that comparison\n\n"
"        **Hint**: The closer to 1 you get, the more deterministic and accurate the results may be, just don't be *too* strict or there wont be any results.\n"
"        "
msgstr ""

#: commands\admin.py:1001
msgid "Minimum relatedness must be between 0 and 1"
msgstr ""

#: commands\admin.py:1004
msgid "Minimum relatedness has been set to **{}**"
msgstr ""

#: commands\admin.py:1009
#, docstring
msgid "Remove certain words/phrases in the bot's responses"
msgstr ""

#: commands\admin.py:1013
msgid "That regex is invalid"
msgstr ""

#: commands\admin.py:1017
msgid "`{}` has been **Removed** from the blacklist"
msgstr ""

#: commands\admin.py:1020
msgid "`{}` has been **Added** to the blacklist"
msgstr ""

#: commands\admin.py:1025
#, docstring
msgid "\n"
"        Toggle whether failed regex blocks the assistant's reply\n\n"
"        Some regexes can cause [catastrophically backtracking](https://www.rexegg.com/regex-explosive-quantifiers.html)\n"
"        The bot can safely handle if this happens and will either continue on, or block the response.\n"
"        "
msgstr ""

#: commands\admin.py:1034
msgid "If a regex blacklist fails, the bots reply will be blocked"
msgstr ""

#: commands\admin.py:1037
msgid "If a reges blacklist fails, the bot will still reply"
msgstr ""

#: commands\admin.py:1042
#, docstring
msgid "\n"
"        Cycle between embedding methods\n\n"
"        **Dynamic** embeddings mean that the embeddings pulled are dynamically appended to the initial prompt for each individual question.\n"
"        When each time the user asks a question, the previous embedding is replaced with embeddings pulled from the current question, this reduces token usage significantly\n\n"
"        **Static** embeddings are applied in front of each user message and get stored with the conversation instead of being replaced with each question.\n\n"
"        **Hybrid** embeddings are a combination, with the first embedding being stored in the conversation and the rest being dynamic, this saves a bit on token usage\n\n"
"        Dynamic embeddings are helpful for Q&A, but not so much for chat when you need to retain the context pulled from the embeddings. The hybrid method is a good middle ground\n"
"        "
msgstr ""

#: commands\admin.py:1057
msgid "Embedding method has been set to **Static**"
msgstr ""

#: commands\admin.py:1060
msgid "Embedding method has been set to **Hybrid**"
msgstr ""

#: commands\admin.py:1063
msgid "Embedding method has been set to **Dynamic**"
msgstr ""

#: commands\admin.py:1068
#, docstring
msgid "Import embeddings to use with the assistant\n\n"
"        Args:\n"
"            overwrite (bool): overwrite embeddings with existing entry names\n\n"
"        This will read excel files too\n"
"        "
msgstr ""

#: commands\admin.py:1081
msgid "You must attach **.csv** files to this command or reference a message that has them!"
msgstr ""

#: commands\admin.py:1094 commands\admin.py:1173
msgid "Error reading **{}**: {}"
msgstr ""

#: commands\admin.py:1102
msgid "**{}** contains invalid formatting, columns must be "
msgstr ""

#: commands\admin.py:1110
msgid "There are no valid files to import!"
msgstr ""

#: commands\admin.py:1112
msgid "Processing the following files in the background\n"
"{}"
msgstr ""

#: commands\admin.py:1126
msgid "processing"
msgstr ""

#: commands\admin.py:1128
msgid "overwriting"
msgstr ""

#: commands\admin.py:1135
msgid "{}\n"
"`Currently {}: `**{}** ({}/{})"
msgstr ""

#: commands\admin.py:1141
msgid "Failed to process embedding: `{}`"
msgstr ""

#: commands\admin.py:1146
msgid "{}\n"
"**COMPLETE**"
msgstr ""

#: commands\admin.py:1147
msgid "Successfully imported {} embeddings!"
msgstr ""

#: commands\admin.py:1152
#, docstring
msgid "Import embeddings to use with the assistant\n\n"
"        Args:\n"
"            overwrite (bool): overwrite embeddings with existing entry names\n"
"        "
msgstr ""

#: commands\admin.py:1161 commands\admin.py:1673
msgid "You must attach **.json** files to this command or reference a message that has them!"
msgstr ""

#: commands\admin.py:1184
msgid "Failed to import **{}** because it contains invalid formatting!"
msgstr ""

#: commands\admin.py:1189
msgid "Imported the following files: `{}`\n"
"{} embeddings imported"
msgstr ""

#: commands\admin.py:1198
#, docstring
msgid "Export embeddings to a .csv file\n\n"
"        **Note:** csv exports do not include the embedding values\n"
"        "
msgstr ""

#: commands\admin.py:1204 commands\admin.py:1248
msgid "There are no embeddings to export!"
msgstr ""

#: commands\admin.py:1217 commands\admin.py:1237 commands\admin.py:1256
#: commands\admin.py:1276 commands\admin.py:1659
msgid "Here is your embeddings export!"
msgstr ""

#: commands\admin.py:1220 commands\admin.py:1259 commands\admin.py:1641
msgid "File too large, attempting to compress..."
msgstr ""

#: commands\admin.py:1240 commands\admin.py:1279 commands\admin.py:1662
msgid "File is still too large even with compression!"
msgstr ""

#: commands\admin.py:1245
#, docstring
msgid "Export embeddings to a json file"
msgstr ""

#: commands\admin.py:1287
#, docstring
msgid "\n"
"        Manage embeddings for training\n\n"
"        Embeddings are used to optimize training of the assistant and minimize token usage.\n\n"
"        By using this the bot can store vast amounts of contextual information without going over the token limit.\n\n"
"        **Note**\n"
"        You can enter a search query with this command to bring up the menu and go directly to that embedding selection.\n"
"        "
msgstr ""

#: commands\admin.py:1335
#, docstring
msgid "\n"
"        Add custom function calls for Assistant to use\n\n"
"        **READ**\n"
"        - [Function Call Docs](https://platform.openai.com/docs/guides/gpt/function-calling)\n"
"        - [OpenAI Cookbook](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_call_functions_with_chat_models.ipynb)\n"
"        - [JSON Schema Reference](https://json-schema.org/understanding-json-schema/)\n\n"
"        Only these models can use function calls as of now:\n"
"        - gpt-3.5-turbo\n"
"        - gpt-3.5-turbo-16k\n"
"        - gpt-4\n"
"        - gpt-4-32k\n\n"
"        The following objects are passed by default as keyword arguments.\n"
"        - **user**: the user currently chatting with the bot (discord.Member)\n"
"        - **channel**: channel the user is chatting in (TextChannel|Thread|ForumChannel)\n"
"        - **guild**: current guild (discord.Guild)\n"
"        - **bot**: the bot object (Red)\n"
"        - **conf**: the config model for Assistant (GuildSettings)\n"
"        - All functions **MUST** include `*args, **kwargs` in the params and return a string\n"
"        ```python\n"
"        # Can be either sync or async\n"
"        async def func(*args, **kwargs) -> str:\n"
"        ```\n"
"        Only bot owner can manage this, guild owners can see descriptions but not code\n"
"        "
msgstr ""

#: commands\admin.py:1417
#, docstring
msgid "\n"
"        Add/Remove items from the blacklist\n\n"
"        `channel_role_member` can be a member, role, channel, or category channel\n"
"        "
msgstr ""

#: commands\admin.py:1425
msgid "{} has been removed from the blacklist"
msgstr ""

#: commands\admin.py:1428
msgid "{} has been added to the blacklist"
msgstr ""

#: commands\admin.py:1441
#, docstring
msgid "\n"
"        Add/Remove items from the tutor list.\n\n"
"        If using OpenAI's function calling and talking to a tutor, the AI is able to create its own embeddings to remember later\n\n"
"        `role_or_member` can be a member or role\n"
"        "
msgstr ""

#: commands\admin.py:1451
msgid "{} has been removed from the tutor list"
msgstr ""

#: commands\admin.py:1454
msgid "{} has been added to the tutor list"
msgstr ""

#: commands\admin.py:1459
#, docstring
msgid "\n"
"        Override settings for specific roles\n\n"
"        **NOTE**\n"
"        If a user has two roles with override settings, override associated with the higher role will be used.\n"
"        "
msgstr ""

#: commands\admin.py:1468
#, docstring
msgid "\n"
"        Assign a role to use a model\n\n"
"        *Specify same role and model to remove the override*\n"
"        "
msgstr ""

#: commands\admin.py:1494
msgid "Role override for {} removed!"
msgstr ""

#: commands\admin.py:1497
msgid "Role override for {} overwritten!"
msgstr ""

#: commands\admin.py:1500
msgid "Role override for {} added!"
msgstr ""

#: commands\admin.py:1506
#, docstring
msgid "\n"
"        Assign a max token override to a role\n\n"
"        *Specify same role and token count to remove the override*\n"
"        "
msgstr ""

#: commands\admin.py:1518
msgid "Max token override for {} removed!"
msgstr ""

#: commands\admin.py:1521
msgid "Max token override for {} overwritten!"
msgstr ""

#: commands\admin.py:1524
msgid "Max token override for {} added!"
msgstr ""

#: commands\admin.py:1530
#, docstring
msgid "\n"
"        Assign a max response token override to a role\n\n"
"        Set to 0 for response tokens to be dynamic\n\n"
"        *Specify same role and token count to remove the override*\n"
"        "
msgstr ""

#: commands\admin.py:1544
msgid "Max response token override for {} removed!"
msgstr ""

#: commands\admin.py:1547
msgid "Max response token override for {} overwritten!"
msgstr ""

#: commands\admin.py:1550
msgid "Max response token override for {} added!"
msgstr ""

#: commands\admin.py:1555
#, docstring
msgid "\n"
"        Assign a max message retention override to a role\n\n"
"        *Specify same role and retention amount to remove the override*\n"
"        "
msgstr ""

#: commands\admin.py:1567
msgid "Max retention override for {} removed!"
msgstr ""

#: commands\admin.py:1570
msgid "Max retention override for {} overwritten!"
msgstr ""

#: commands\admin.py:1573
msgid "Max retention override for {} added!"
msgstr ""

#: commands\admin.py:1578
#, docstring
msgid "\n"
"        Assign a max retention time override to a role\n\n"
"        *Specify same role and time to remove the override*\n"
"        "
msgstr ""

#: commands\admin.py:1590
msgid "Max retention time override for {} removed!"
msgstr ""

#: commands\admin.py:1593
msgid "Max retention time override for {} overwritten!"
msgstr ""

#: commands\admin.py:1596
msgid "Max retention time override for {} added!"
msgstr ""

#: commands\admin.py:1608
#, docstring
msgid "Wipe all settings and data for entire cog"
msgstr ""

#: commands\admin.py:1610
msgid "Not wiping cog"
msgstr ""

#: commands\admin.py:1615
msgid "Cog has been wiped!"
msgstr ""

#: commands\admin.py:1620
#, docstring
msgid "\n"
"        Take a backup of the cog\n\n"
"        - This does not backup conversation data\n"
"        "
msgstr ""

#: commands\admin.py:1638
msgid "Here is your export!"
msgstr ""

#: commands\admin.py:1667
#, docstring
msgid "\n"
"        Restore the cog from a backup\n"
"        "
msgstr ""

#: commands\admin.py:1677
msgid "Cog has been restored!"
msgstr ""

#: commands\admin.py:1683
#, docstring
msgid "\n"
"        Wipe saved conversations for the assistant in all servers\n\n"
"        This will delete any and all saved conversations for the assistant.\n"
"        "
msgstr ""

#: commands\admin.py:1692
msgid "Conversations have been wiped for all servers!"
msgstr ""

#: commands\admin.py:1698
#, docstring
msgid "Toggle persistent conversations"
msgstr ""

#: commands\admin.py:1701
msgid "Persistent conversations have been **Disabled**"
msgstr ""

#: commands\admin.py:1704
msgid "Persistent conversations have been **Enabled**"
msgstr ""

#: commands\admin.py:1710
#, docstring
msgid "\n"
"        Wipe saved embeddings for all servers\n\n"
"        This will delete any and all saved embedding training data for the assistant.\n"
"        "
msgstr ""

#: commands\admin.py:1719
msgid "All embedding data has been wiped for all servers!"
msgstr ""

#: commands\admin.py:1725
#, docstring
msgid "\n"
"        Toggle whether the assistant listens to other bots\n\n"
"        **NOT RECOMMENDED FOR PUBLIC BOTS!**\n"
"        "
msgstr ""

#: commands\admin.py:1732
msgid "Assistant will no longer listen to other bot messages"
msgstr ""

#: commands\admin.py:1735
msgid "Assistant will listen to other bot messages"
msgstr ""

#: commands\base.py:23
#, docstring
msgid "Get help using assistant"
msgstr ""

#: commands\base.py:25
msgid "\n"
"# How to Use\n\n"
"### Commands\n"
"`[p]convostats` - view your conversation message count/token usage for that convo.\n"
"`[p]clearconvo` - reset your conversation for the current channel/thread/forum.\n"
"`[p]showconvo` - get a json dump of your current conversation (this is mostly for debugging)\n"
"`[p]chat` or `[p]ask` - command prefix for chatting with the bot outside of the live chat, or just @ it.\n\n"
"### Chat Arguments\n"
"`[p]chat --last` - resend the last message of the conversation.\n"
"`[p]chat --extract` - extract all markdown text to be sent as a separate message.\n"
"`[p]chat --outputfile <filename>` - sends the reply as a file instead.\n\n"
"### Argument Use-Cases\n"
"`[p]chat --last --outpufile test.py` - output the last message the bot sent as a file.\n"
"`[p]chat write a python script to do X... --extract --outputfile test.py` - all code blocks from the output will be sent as a file in addition to the reply.\n"
"`[p]chat --last --extract --outputfile test.py` - extract code blocks from the last message to send as a file.\n\n"
"### File Comprehension\n"
"Files may be uploaded with the chat command to be included with the question or query, so rather than pasting snippets, the entire file can be uploaded so that you can ask a question about it.\n"
"At the moment the bot is capable of reading the following file extensions.\n"
"```json\n"
"{}\n"
"```\n"
"If a file has no extension it will still try to read it only if it can be decoded to utf-8.\n"
"### Tips\n"
"- Replying to someone else's message while using the `[p]chat` command will include their message in *your* conversation, useful if someone says something helpful and you want to include it in your current convo with GPT.\n"
"- Replying to a message with a file attachment will have that file be read and included in your conversation. Useful if you upload a file and forget to use the chat command with it, or if someone else uploads a file you want to query the bot with.\n"
"- Conversations are *Per* user *Per* channel, so each channel you interact with GPT in is a different convo.\n"
"- Talking to the bot like a person rather than a search engine generally yields better results. The more verbose you can be, the better.\n"
"- Conversations are persistent, if you want the bot to forget the convo so far, use the `[p]clearconvo` command\n"
"        "
msgstr ""

#: commands\base.py:83
#, docstring
msgid "\n"
"        Chat with [botname]!\n\n"
"        Conversations are *Per* user *Per* channel, meaning a conversation you have in one channel will be kept in memory separately from another conversation in a separate channel\n\n"
"        **Optional Arguments**\n"
"        `--outputfile <filename>` - uploads a file with the reply instead (no spaces)\n"
"        `--extract` - extracts code blocks from the reply\n\n"
"        **Example**\n"
"        `[p]chat write a python script that prints \"Hello World!\"`\n"
"        - Including `--outputfile hello.py` will output a file containing the whole response.\n"
"        - Including `--outputfile hello.py --extract` will output a file containing just the code blocks and send the rest as text.\n"
"        - Including `--extract` will send the code separately from the reply\n"
"        "
msgstr ""

#: commands\base.py:109
#, docstring
msgid "\n"
"        Check the token and message count of yourself or another user's conversation for this channel\n\n"
"        Conversations are *Per* user *Per* channel, meaning a conversation you have in one channel will be kept in memory separately from another conversation in a separate channel\n\n"
"        Conversations are only stored in memory until the bot restarts or the cog reloads\n"
"        "
msgstr ""

#: commands\base.py:154
msgid "Could not fetch external model"
msgstr ""

#: commands\base.py:160
msgid "`Messages: `{}/{}\n"
"`Tokens:   `{}/{}\n"
"`Expired:  `{}\n"
"`Model:    `{}"
msgstr ""

#: commands\base.py:174
msgid "Conversation stats for {}"
msgstr ""

#: commands\base.py:177
msgid "Token limit is a soft cap and excess is trimmed before sending to the api"
msgstr ""

#: commands\base.py:183
#, docstring
msgid "\n"
"        Reset your conversation with the bot\n\n"
"        This will clear all message history between you and the bot for this channel\n"
"        "
msgstr ""

#: commands\base.py:190
msgid "Your conversation in this channel has been reset!"
msgstr ""

#: commands\base.py:195
#, docstring
msgid "\n"
"        Fetch related embeddings according to the current settings along with their scores\n\n"
"        You can use this to fine-tune the minimum relatedness for your assistant\n"
"        "
msgstr ""

#: commands\base.py:202
msgid "You do not have any embeddings configured!"
msgstr ""

#: commands\base.py:204
msgid "Top N is set to 0 so no embeddings will be returned"
msgstr ""

#: commands\base.py:210
msgid "Failed to get embedding for your query"
msgstr ""

#: commands\base.py:214
msgid "No embeddings could be related to this query with the current settings"
msgstr ""

#: commands\base.py:218
msgid "`Entry Name:  `{}\n"
msgstr ""

#: commands\base.py:219
msgid "`Relatedness: `{}\n"
msgstr ""

#: commands\base.py:220
msgid "`Dimensions:  `{}\n"
msgstr ""

#: commands\base.py:232
#, docstring
msgid "\n"
"        View the current transcript of a conversation\n\n"
"        This is mainly here for moderation purposes\n"
"        "
msgstr ""

#: commands\base.py:241
msgid "You have no conversation in this channel!"
msgstr ""

#: commands\base.py:253
msgid "Here is your conversation transcript!"
msgstr ""

